#N struct 1244-samplewindow float x float y array 1244-windowtemplate 1244-window;
#N struct 1244-window float x float y;
#N canvas 369 38 813 673 10;
#X obj 477 220 * 0.01;
#X obj 575 201 random 24;
#X obj 575 226 - 12;
#X obj 518 259 pack f f f;
#X obj 527 155 t b f b;
#X obj 530 124 hsl 101 15 0 1 0 0 empty empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 477 194 random 10;
#X msg 464 375 bang;
#X text 409 348 resets all the voices;
#X msg 579 400 bang;
#X text 527 374 bang to load a sound file;
#X obj 2 9 cnv 15 800 40 empty empty pdt.granular~ 20 12 0 14 #0400fc #fcfcfc 0;
#X obj 108 387 hsl 101 15 0 1 0 0 empty empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X msg 105 417 0.05 \$1 0;
#X obj 186 470 random 1000;
#X obj 104 446 t l b;
#X obj 105 501 pipe f f f 100;
#X obj 105 539 pack f f f;
#X text 19 81 pdt.granular is a 32 voice granular synthesis engine designed to be a starting point. The left inlet takes a list specifying lens size (0-1) \, start position (0-1) \, and pitch transposition. Bang center inlet to reset all voices to dsp off and ready to receive a message. Bang right inlet to load a sound file.;
#X msg 273 330 1 0 0;
#X msg 197 330 0.1 0.35 7;
#X text 19 249 The control mechanism is meant to be flexible so that the user can define how they want to control the engine without having to modify or rewrite the abstraction.;
#X text 19 164 Because 32 voices can take up a lot of cpu cycles all voices have a built in mechinism to turn their internal dsp off when they are at rest and awaiting instruction. Similarly when they are active a blocking mechanism is switched on so that new instructions can only be processed when the voice is done its current task.;
#X text 198 309 send and instruction;
#X text 62 367 asynchronize by delaying messages;
#X text 473 100 randomize lens size and pitch;
#X obj 365 432 pdt.granular~;
#X msg 463 536 /Users/alex_matheson/Documents/backups/brick/samples/audio/winds/pennywhistlepack\ Folder/whistle\ C1.wav 0;
#X obj 365 536 pdt.master2~;
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 2 0 3 2;
#X connect 3 0 26 0;
#X connect 4 0 6 0;
#X connect 4 1 3 1;
#X connect 4 2 1 0;
#X connect 5 0 4 0;
#X connect 6 0 0 0;
#X connect 7 0 26 1;
#X connect 9 0 26 2;
#X connect 12 0 13 0;
#X connect 13 0 15 0;
#X connect 14 0 16 3;
#X connect 15 0 16 0;
#X connect 15 1 14 0;
#X connect 16 0 17 0;
#X connect 16 1 17 1;
#X connect 16 2 17 2;
#X connect 17 0 26 0;
#X connect 19 0 26 0;
#X connect 20 0 26 0;
#X connect 26 0 28 0;
#X connect 26 1 28 1;
#X connect 26 2 27 0;
